package viewer;

import java.io.BufferedReader;
import java.io.File;           // Import java.io.File
import java.io.FileInputStream;
import java.io.FileReader;
import java.io.IOException;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

public class Viewer {

	public static void main(String[] args) {
		 // Path to the DLT file
        String filePath = "C:\\Users\\ahmed\\Downloads\\delulu.dlt";
        
        try (FileInputStream fis = new FileInputStream(filePath)) {
            byte[] buffer = new byte[16]; // Read in 16 bytes for the Base Header initially
            while (fis.read(buffer) != -1) {
                parseBaseHeader(buffer);
            }
        } catch (IOException e) {
            System.err.println("Error reading DLT file: " + e.getMessage());
        }
    }

    private static void parseBaseHeader(byte[] data) {
        if (data.length < 4) {
            System.out.println("Insufficient data for Base Header");
            return;
        }

        ByteBuffer buffer = ByteBuffer.wrap(data);
        buffer.order(ByteOrder.BIG_ENDIAN);
        
        int header = buffer.getInt();
        byte counter = buffer.get();
        char msgLen = buffer.getChar();

        System.out.println("\nEntire Frame:");
        for (int i = 0; i < data.length; i++) {
            System.out.printf("%02X ", data[i]); // Print each byte in Hex
            if ((i + 1) % 16 == 0) { // Newline every 16 bytes for readability
                System.out.println();
            }
        }
        System.out.println();
        

        // Additional conditional fields (Timestamp, Message ID) parsing can be added here.
        System.out.println("Base Header parsing completed.");
    }

 
    

    
}
